  cout << "BEFORE NORMALIZATION" << endl << endl;

  for(int i = 0; i < 1; i++){
    cout << "=============== LANDSCAPE " << i << " ===============" << endl << endl;
    for(int j = 0; j < landscapes_random_walk[0].size(); j++){
      cout << "TCH CURRENT SOLUTION: " << landscapes_random_walk[0][j].tch_current_solution << endl;
      for(int k = 0; k < landscapes_random_walk[0][j].tchebycheff_neighbors.size(); k++){
        cout << "TCH NEIGHBOR " << k << ": " << landscapes_random_walk[0][j].tchebycheff_neighbors[k] << endl;
      }cout << endl;
    } cout << endl;
  }

  normalization(landscapes_random_walk, max, min);
  normalization(landscapes_adaptative_walk, max, min);

  cout << "AFTER NORMALIZATION" << endl << endl;

  for(int i = 0; i < 1; i++){
    cout << "=============== LANDSCAPE " << i << " ===============" << endl << endl;
    for(int j = 0; j < landscapes_random_walk[0].size(); j++){
      cout << "TCH CURRENT SOLUTION: " << landscapes_random_walk[0][j].tch_current_solution << endl;
      for(int k = 0; k < landscapes_random_walk[0][j].tchebycheff_neighbors.size(); k++){
        cout << "TCH NEIGHBOR " << k << ": " << landscapes_random_walk[0][j].tchebycheff_neighbors[k] << endl;
      }cout << endl;
    } cout << endl;
  }